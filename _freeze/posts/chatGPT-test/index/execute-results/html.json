{
  "hash": "cc251ed87fbc44da40d16dfcacc38a60",
  "result": {
    "markdown": "---\ntitle: \"ChatGPT Has a Long Way to Go\"\nauthor: \"Ryan Heslin\"\ndate: \"2023-03-08\"\ncategories:\nurlcolor: \"blue\"\n---\n\nLike everyone else, I've spent some time over the past few months toying\nwith [ChatGPT](https://openai.com/blog/chatgpt), the new chatbot trained on the latest publicly available\nversion of [OpenAI](https://openai.com/)'s large language model.\n\nYou may already have heard about ChatGPT's impressive capabilities. It can\nwrite code to specifications, answer factual questions, and even write\ncoherent [essays](https://www.vice.com/en/article/epzjew/chatgpt-is-so-bad-at-essays-that-professors-can-spot-it-instantly).\n\nThe second capability interests me the most. I served as a TA in graduate school,\nand I spend a good deal of my free time helping people with R problems. Both roles,\ninvolve helping people debug or improve their code and answering their questions about the\nsubject. ChatGPT can do both tasks, but is it good enough to render me obsolete?\n\nFor now, I think the answer is no. ChatGPT's limitations become obvious with experience. It refuses to take\na stance on anything remotely controversial. A typical response will give\none viewpoint, say \"On the other hand...\", then express the other. Its prose is, well, mechanical: it composes\nlong, monotonous sentences with bland, inexact diction. Writers for content\nfarms will soon become obsolete, but anyone skilled is safe for now.\n\nThese are are mere annoyances. One quirk, however, is dangerous to naive\nusers: ChatGPT will confidently give you false information.\nLike an arrogant party guest who will invent an answer to any question\nyou ask them rather\nthan admit, \"I don't know,\" it always seems to have a coherent response -  just\nnot necessarily the correct one.\n\nI fed ChatGPT a few technical questions to see if I could catch it in an error.\nTo my surprise, it knew how to derive the number $e$ from\na Taylor series, which takes some knowledge of calculus:\n\n![](/img/taylor.png){}\n\nI followed up with an outright trick question:\n\n![](/img/tuple.png){}\n\nGotcha. Actually, Python tuples _can_ contain references to mutable objects, even\nthough tuples themselves are immutable. It would be silly ever to do this,\nbut you can:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nx = [1, 2, 3]\ny = (x, 4, (1, 2))\ny[0].append(1)\nprint(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n([1, 2, 3, 1], 4, (1, 2))\n```\n:::\n:::\n\n\nI could have declared victory there, but I pressed on.\nPeople are often nonplussed when I tell them I enjoyed linear algebra class. Hence the\nnext question: what are the possible numbers of solutions to a system of linear\nequations?\n\nChatGPT replied with this:\n\n![](/img/equations.png){}\n\nThis is, at best, a distortion of the truth.\nWe may as well do this rigorously.\nLet $A$ be the coefficient matrix and of the equation $Ax=b$.\nA system with more unknowns than equations\nhas either no solution\nor infinitely many solutions. A system with more equations than unknowns may\nhave zero solutions, one solution, or infinitely\nmany solutions.\nA system with exactly as many unknowns as equations may also have zero, one, or infinitely\nmany solutions.\n\nIn each case, at least one solution exists if and only if $b$ lies entirely\nwithin the image of $A$ (the linear space spanned by its column vectors). In the first case, a unique\nsolution is impossible because the column vectors of $A$ must be linearly\ndependent. $n$ linearly independent vectors span a vector space of dimension\n$n$, such that any vector within it corresponds to a unique linear combination\nof the vectors. But more unknowns than equations means more than $n$ vectors,\nmeaning at least one must be redundant. So in this case, there are infinitely many ways\nof forming vectors in $A$'s image from its columns, and hence either zero\nor infinitely many solutions.\n\nIn the other two cases, at most one solution exists if the rank of the matrix\n(the number of linearly independent column vectors, or, equivalently, row vectors)\nis at least the number of unknowns. Then the column vectors form a basis for\nthe image of $A$, so any solutions must be unique. This is not a sufficient\ncriterion for a matrix with more unknowns than equations:\n$b$ may not be in the image of $A$, in which case no solution\nexists. If the numbers of equations and unknowns are equal, of course, the\nrank equaling the number of columns means it also equals the number of rows,\nensuring a solution because the columns of $A$ form a basis for a $n$-dimensional\nvector space. In general, one or more solutions must exist if and only if the rank of $A$ is\nat least the number of rows, and a solution is unique (assuming it exists) if and only if the rank\nis at least the number of columns. Only if the rank is equal to both quantities\nis a unique solution guaranteed.\n\nThe reference to determinants\nalso misleads, since they are only defined if the number of equations and\nthe number of unknowns are equal and $A$ is square.\n\nHow many unwitting linear algebra students have asked this innocent question\nand received a response this misleading? Probably at least some.\n\nIn the unlikely event you're still reading this, I was tempted to ask ChatGPT for more information about its fascinating\ntheory of heterodox linear algebra. But instead I corrected it.\n\n![](/img/correction.png){}\n\nHere we see a common pattern: ChatGPT confidently says something wrong. The user\npushes back. ChatGPT meekly agrees. It\nspouts garbled nonsense, like a student faking understanding. The illusion\nthat the bot is actually reasoning collapses.\n\nChatGPT is a major advance, perhaps a milestone. It casts a\nconvincing illusion of intelligence. Unlike earlier chatbots, it is smart and reliable enough to have real uses. But anyone approaching it\nas an oracle is bound to be disappointed. None of its factual claims, especially\nabout technical subjects, should be trusted without verification.\nBut if you have to do your own research anyway to confirm what it tells you,\nwhy ask it for help to begin with?\n\nAs a programmer, I suspect ChatGPT or its successors will begin automating\nparts of my job soon enough. I feel a twinge of unease at the prospect.\nBut the day AI replaces us outright, if it will ever come, is not nigh.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}